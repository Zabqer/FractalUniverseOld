# Generated by Django 2.1.7 on 2019-04-07 19:24

import FractalUniverse.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('params', models.TextField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Fractal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(choices=[(0, 'UNKNOWN'), (1, 'IN_QUEUE'), (2, 'CALCULATING'), (3, 'READY')], default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('file_id', models.TextField(max_length=40, null=True)),
                ('image_url', models.URLField(null=True)),
                ('dimension', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fractals', to='FractalUniverse.Dimension', verbose_name='dimension')),
            ],
            options={
                'verbose_name_plural': 'fractals',
                'verbose_name': 'fractal',
            },
        ),
        migrations.CreateModel(
            name='FractalCalculateTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startTime', models.DateTimeField(auto_now_add=True, verbose_name='startTime')),
                ('fractal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fractalcalculatetasks', to='FractalUniverse.Fractal', verbose_name='fractal')),
            ],
        ),
        migrations.CreateModel(
            name='Palette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('colors', models.CharField(max_length=100, validators=[django.core.validators.int_list_validator], verbose_name='colors')),
                ('gradations', models.IntegerField(verbose_name='gradations')),
            ],
            options={
                'verbose_name_plural': 'palettes',
                'verbose_name': 'palette',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='key')),
                ('remember', models.BooleanField(default=True, verbose_name='remember')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('expire_at', models.DateTimeField(default=None, verbose_name='expire_at')),
            ],
            options={
                'verbose_name_plural': 'tokens',
                'verbose_name': 'token',
            },
        ),
        migrations.CreateModel(
            name='Universe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.TextField(max_length=200)),
                ('initial_value', models.TextField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('login', models.CharField(max_length=32, unique=True, verbose_name='login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('password', models.CharField(max_length=256, verbose_name='password')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='registered')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_premium', models.BooleanField(default=False, verbose_name='is_premium')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'managed': True,
            },
            managers=[
                ('objects', FractalUniverse.managers.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='token',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='palette',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='palettes', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AddField(
            model_name='fractal',
            name='palette',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fractals', to='FractalUniverse.Palette', verbose_name='palette'),
        ),
        migrations.AddField(
            model_name='dimension',
            name='universe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dimensions', to='FractalUniverse.Universe', verbose_name='universe'),
        ),
        migrations.AlterUniqueTogether(
            name='palette',
            unique_together={('id', 'user')},
        ),
    ]
